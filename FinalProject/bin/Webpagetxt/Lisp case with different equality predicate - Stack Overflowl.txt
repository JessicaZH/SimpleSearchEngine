Lisp case with different equality predicate - Stack Overflow Stack Overflow Log In Sign Up current community Stack Overflow help chat Meta Stack Overflow your communities Sign up or log in to customize your list. more stack exchange communities company blog Tour Start here for a quick overview of the site Help Center Detailed answers to any questions you might have Meta Discuss the workings and policies of this site About Us Learn more about Stack Overflow the company Business Learn more about hiring developers or posting ads with us By using our site, you acknowledge that you have read and understand our Cookie Policy, Privacy Policy, and our Terms of Service. Home Public Stack Overflow Tags Users Jobs Teams Q&A for work Learn More Lisp case with different equality predicate Ask Question up vote 1 down vote favorite As a part of a Tic Tac Toe playing bot, I need a function that evaluates combinations of tiles to points. The code would look something like this: (case combination
    ("EEEEE" 0)
    ("EEEEP" 1)
    ("EEEPE" 1)
    ("EEEPP" 2)
    ("EEPEE" 1)
    ("EEPEP" 2)
    ("EEPPE" 2)
    ("EEPPP" 3)
    ("EPEEE" 1)
    ("EPEEP" 2)
    ("EPEPE" 2)
    ("EPEPP" 3)
    ("EPPEE" 2)
    ("EPPEP" 3)
    ("EPPPE" 3)
    ("EPPPP" 4)
    ("PEEEE" 1)
    ("PEEEP" 2)
    ("PEEPE" 2)
    ("PEEPP" 3)
    ("PEPEE" 2)
    ("PEPEP" 3)
    ("PEPPE" 3)
    ("PEPPP" 4)
    ("PPEEE" 2)
    ("PPEEP" 3)
    ("PPEPE" 3)
    ("PPEPP" 4)
    ("PPPEE" 3)
    ("PPPEP" 4)
    ("PPPPE" 4)
    ("PPPPP" 5))
 (This is not the place to discuss the value of such an approach, for it is used for reasons unrelated to the question) The problem is that case uses a predicate that doesn't return true for identical strings that aren't the same object (hard to find if it's eq or eql). How can you change that? EDIT: I solved the original problem by converting the string into a corresponding binary number, which can be compared using eql or used as an index in a list. common-lisp equality predicate share|improve this question edited 45 mins ago asked yesterday Kotlopou 275 CASE uses the EQL predicate. – Rainer Joswig yesterday Pattern matching ? github.com/guicho271828/trivia – Ehvince 11 hours ago add a comment | 4 Answers 4 active oldest votes up vote 5 down vote Use alexandria:switch from the alexandria library, available from quicklisp. (switch (combination :test #'string=)
  ("FOO" …)
  …)
 share|improve this answer answered yesterday Svante 39.1k662109 add a comment | up vote 3 down vote Your code just calculates (count #\P combination). Usually I would convert the string in a number and compute with it. Using LOGCOUNT to get the on bits or something. Even if I were using a large CASE-like switch, I would convert the string once to a number, instead of doing a multitude of string comparisons. share|improve this answer answered yesterday Rainer Joswig 110k8164282 This is why I added the part in parentheses. This code is just a placeholder I use before I invent a better points system, the numbers may be different. I need to be able to change any of these numbers arbitrarily. – Kotlopou 8 hours ago add a comment | up vote 2 down vote You could write a macro: (defmacro string-case (key &rest forms)
  (let ((k (gensym "KEY")))
    `(let ((,k ,key))
       (cond
         ,@(loop for (str . body) in forms
                 collect `((string= ,k ,str) ,@body))))))
 And then use it like case. Note that this macro will check each substring one at a time (up to 32 branches in your case), which is less efficient than eg looking at the first character and deciding what to do, then looking at the next character and so on (5-10 branches in your case), which is less efficient than doing what you actually intend (eg counting #\P) (this can be done with 5-6 easily predicted branches, or maybe 10 depending on implementation). Of these options, the second generated the most code, then the first, then the third. share|improve this answer answered yesterday Dan Robertson 2,64468 I don't intend to just count the P's. This is just a placeholder before I invent a better points system. – Kotlopou 8 hours ago add a comment | up vote 1 down vote Another approach would be to convert combination to a symbol. The resulting code will look like this: (case (intern combination)
  (EEEEE 0)
  (EEEEP 1)
  (EEEPE 1)
  ...)
 But you need to keep in mind that intern operates at runtime in the context of current package (*package*), which means that if this is part of a function that is called outside of the package where it's defined, it will not work. There are 2 ways to work around this (basically, two variations of one): either intern in the package ((intern combination <your-package>)) or intern as keyword. In the later case, the whole form will look like this: (case (intern combination :keyword)
  (:EEEEE 0)
  (:EEEEP 1)
  (:EEEPE 1)
  ...)
 Also worth noting may be performance considerations. They shouldn't be a problem as, although interning is a rather heavy operation, initially, when it's called repeatedly on an already interned symbol it's, basically, just a dictionary lookup. share|improve this answer answered 3 hours ago Vsevolod Dyomkin 8,09122129 add a comment | Your Answer Thanks for contributing an answer to Stack Overflow! Please be sure to answer the question. Provide details and share your research! But avoid … Asking for help, clarification, or responding to other answers. Making statements based on opinion; back them up with references or personal experience. To learn more, see our tips on writing great answers. Some of your past answers have not been well-received, and you're in danger of being blocked from answering. Please pay close attention to the following guidance: Please be sure to answer the question. Provide details and share your research! But avoid … Asking for help, clarification, or responding to other answers. Making statements based on opinion; back them up with references or personal experience. To learn more, see our tips on writing great answers. draft saved draft discarded Sign up or log in Sign up using Google Sign up using Facebook Sign up using Email and Password Post as a guest Name Email Required, but never shown Post as a guest Name Email Required, but never shown Post Your Answer Discard By clicking "Post Your Answer", you acknowledge that you have read our updated terms of service, privacy policy and cookie policy, and that your continued use of the website is subject to these policies. Not the answer you're looking for? Browse other questions tagged common-lisp equality predicate or ask your own question. asked yesterday viewed 49 times active today Related 443How do the PHP equality (== double equals) and identity (=== triple equals) comparison operators differ? 552Is there a difference between `==` and `is` in Python? 5673Which equals operator (== vs ===) should be used in JavaScript comparisons? 319Elegant ways to support equivalence (“equality”) in Python classes 67What's the difference between eq, eql, equal and equalp, in Common Lisp? 244Predicate Delegates in C# 142Difference between `set`, `setq`, and `setf` in Common Lisp? 8Predicates Common Lisp 502What's the difference between equal?, eql?, ===, and ==? 236How to negate a method reference predicate Hot Network Questions Can I hold an action to do something I'm not currently capable of doing? What does a program do when it's sent SIGKILL signal? Are there any countries having an official celebration for the annexation of foreign territory? Is the `std::exception`, in its current form, redundant? Understanding "jam nunc" Delete with multiple indices is extremely slow--workaround? Ideological rebus Should I switch the transponder to STBY or not while changing codes? Why is JavaScript "safe" to run in the browser? What is the maximum age of cats? Are Agent Barton and Agent Romanoff ever called 'Hawkeye' and 'Black Widow' in the MCU? Can I buy only the glass in the Christmas market? A ring which contains a nonprime maximal ideal Is it possible to access the email of a Lead's owner directly? How to affect priorities to bugs to developers and treat them accordingly? What is the meaning and use of "seh" in Caribbean dialects of English? Why can we distinguish different pitches in a chord but not different hues of light? Term cancellation in limits laptop noisy sound - fan or hdd? Is Ubuntu compatible with laptops that have touch screen features? If any two items in a list is equal to a given number [Python] How to solder Christmas lights insulated wire? Will listing my major GPA instead of my cumulative GPA on my resume cause problems? Viva voce question about another student "validating" my results more hot questions question feed lang-lisp Stack Overflow Questions Jobs Developer Jobs Directory Salary Calculator Help Mobile Products Teams Talent Engagement Enterprise Company About Press Work Here Legal Privacy Policy Contact Us Stack Exchange Network Technology Life / Arts Culture / Recreation Science Other Stack Overflow Server Fault Super User Web Applications Ask Ubuntu Webmasters Game Development TeX - LaTeX Software Engineering Unix & Linux Ask Different (Apple) WordPress Development Geographic Information Systems Electrical Engineering Android Enthusiasts Information Security Database Administrators Drupal Answers SharePoint User Experience Mathematica Salesforce ExpressionEngine® Answers Stack Overflow em Português Blender Network Engineering Cryptography Code Review Magento Software Recommendations Signal Processing Emacs Raspberry Pi Stack Overflow на русском Programming Puzzles & Code Golf Stack Overflow en español Ethereum Data Science Arduino Bitcoin more (30) Photography Science Fiction & Fantasy Graphic Design Movies & TV Music: Practice & Theory Worldbuilding Seasoned Advice (cooking) Home Improvement Personal Finance & Money Academia Law more (15) English Language & Usage Skeptics Mi Yodeya (Judaism) Travel Christianity English Language Learners Japanese Language Arqade (gaming) Bicycles Role-playing Games Anime & Manga Puzzling Motor Vehicle Maintenance & Repair more (33) MathOverflow Mathematics Cross Validated (stats) Theoretical Computer Science Physics Chemistry Biology Computer Science Philosophy more (10) Meta Stack Exchange Stack Apps API Data Area 51 Blog Facebook Twitter LinkedIn site design / logo © 2018 Stack Exchange Inc; user contributions licensed under cc by-sa 3.0 with attribution required. rev 2018.12.3.32297 Stack Overflow works best with JavaScript enabled
