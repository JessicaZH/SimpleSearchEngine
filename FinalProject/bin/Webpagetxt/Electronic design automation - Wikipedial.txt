Electronic design automation - Wikipedia Electronic design automation From Wikipedia, the free encyclopedia Jump to navigation Jump to search "ECAD" redirects here. For the Brazilian music licensing organization, see Escritório Central de Arrecadação e Distribuição. For other uses, see ECAD (disambiguation). Electronic design automation (EDA), also referred to as electronic computer-aided design (ECAD),[1] is a category of software tools for designing electronic systems such as integrated circuits and printed circuit boards. The tools work together in a design flow that chip designers use to design and analyze entire semiconductor chips. Since a modern semiconductor chip can have billions of components, EDA tools are essential for their design. This article describes EDA specifically with respect to integrated circuits. Contents 1 History 1.1 Early days 1.2 Birth of commercial EDA 2 Current status 3 Software focuses 3.1 Design 3.2 Simulation 3.3 Analysis and verification 3.4 Manufacturing preparation 3.5 Functional Safety 4 Companies 4.1 Old companies 4.2 Acquisitions 5 See also 6 References History[edit] Early days[edit] Before EDA, integrated circuits were designed by hand, and manually laid out. Some advanced shops used geometric software to generate the tapes for the Gerber photoplotter, but even those copied digital recordings of mechanically drawn components. The process was fundamentally graphic, with the translation from electronics to graphics done manually. The best known company from this era was Calma, whose GDSII format survives. By the mid-1970s, developers started to automate the design along with the drafting. The first placement and routing (Place and route) tools were developed. The proceedings of the Design Automation Conference cover much of this era. The next era began about the time of the publication of "Introduction to VLSI Systems" by Carver Mead and Lynn Conway in 1980. This ground breaking text advocated chip design with programming languages that compiled to silicon. The immediate result was a considerable increase in the complexity of the chips that could be designed, with improved access to design verification tools that used logic simulation. Often the chips were easier to lay out and more likely to function correctly, since their designs could be simulated more thoroughly prior to construction. Although the languages and tools have evolved, this general approach of specifying the desired behavior in a textual programming language and letting the tools derive the detailed physical design remains the basis of digital IC design today. The earliest EDA tools were produced academically. One of the most famous was the "Berkeley VLSI Tools Tarball", a set of UNIX utilities used to design early VLSI systems. Still widely used are the Espresso heuristic logic minimizer and Magic. Another crucial development was the formation of MOSIS, a consortium of universities and fabricators that developed an inexpensive way to train student chip designers by producing real integrated circuits. The basic concept was to use reliable, low-cost, relatively low-technology IC processes, and pack a large number of projects per wafer, with just a few copies of each projects' chips. Cooperating fabricators either donated the processed wafers, or sold them at cost, seeing the program as helpful to their own long-term growth. Birth of commercial EDA[edit] 1981 marks the beginning of EDA as an industry. For many years, the larger electronic companies, such as Hewlett Packard, Tektronix, and Intel, had pursued EDA internally. In 1981, managers and developers spun out of these companies to concentrate on EDA as a business. Daisy Systems, Mentor Graphics, and Valid Logic Systems were all founded around this time, and collectively referred to as DMV. Within a few years there were many companies specializing in EDA, each with a slightly different emphasis. The first trade show for EDA was held at the Design Automation Conference in 1984. In 1981, the U.S. Department of Defense began funding of VHDL as a hardware description language. In 1986, Verilog, another popular high-level design language, was first introduced as a hardware description language by Gateway Design Automation. Simulators quickly followed these introductions, permitting direct simulation of chip designs: executable specifications. In a few more years, back-ends were developed to perform logic synthesis. Current status[edit] Current digital flows are extremely modular (see Integrated circuit design, Design closure, and Design flow (EDA)). The front ends produce standardized design descriptions that compile into invocations of "cells,", without regard to the cell technology. Cells implement logic or other electronic functions using a particular integrated circuit technology. Fabricators generally provide libraries of components for their production processes, with simulation models that fit standard simulation tools. Analog EDA tools are far less modular, since many more functions are required, they interact more strongly, and the components are (in general) less ideal. EDA for electronics has rapidly increased in importance with the continuous scaling of semiconductor technology.[2] Some users are foundry operators, who operate the semiconductor fabrication facilities, or "fabs", and design-service companies who use EDA software to evaluate an incoming design for manufacturing readiness. EDA tools are also used for programming design functionality into FPGAs. Software focuses[edit] This article may be too technical for most readers to understand. Please help improve it to make it understandable to non-experts, without removing the technical details. (February 2017) (Learn how and when to remove this template message) Design[edit] Main article: Design flow (EDA) High-level synthesis (or behavioural synthesis, algorithmic synthesis) – high-level design description (e.g. in C/C++) is converted into RTL. Logic synthesis – translation of RTL design description (e.g. written in Verilog or VHDL) into a discrete netlist of logic gates. Schematic capture – For standard cell digital, analog, RF-like Capture CIS in Orcad by Cadence and ISIS in Proteus Layout – usually schematic-driven layout, like Layout in Orcad by Cadence, ARES in Proteus Simulation[edit] Main article: Electronic circuit simulation Transistor simulation – low-level transistor-simulation of a schematic/layout's behavior, accurate at device-level. Logic simulation – digital-simulation of an RTL or gate-netlist's digital (boolean 0/1) behavior, accurate at boolean-level. Behavioral Simulation – high-level simulation of a design's architectural operation, accurate at cycle-level or interface-level. Hardware emulation – Use of special purpose hardware to emulate the logic of a proposed design. Can sometimes be plugged into a system in place of a yet-to-be-built chip; this is called in-circuit emulation. Technology CAD simulate and analyze the underlying process technology. Electrical properties of devices are derived directly from device physics. Electromagnetic field solvers, or just field solvers, solve Maxwell's equations directly for cases of interest in IC and PCB design. They are known for being slower but more accurate than the layout extraction above.[where?] Schematic capture program Analysis and verification[edit] Functional verification Clock Domain Crossing Verification (CDC check): Similar to linting, but these checks/tools specialize in detecting and reporting potential issues like data loss, meta-stability due to use of multiple clock domains in the design. Formal verification, also model checking: Attempts to prove, by mathematical methods, that the system has certain desired properties, and that certain undesired effects (such as deadlock) cannot occur. Equivalence checking: algorithmic comparison between a chip's RTL-description and synthesized gate-netlist, to ensure functional equivalence at the logical level. Static timing analysis: Analysis of the timing of a circuit in an input-independent manner, hence finding a worst case over all possible inputs. Physical verification, PV: checking if a design is physically manufacturable, and that the resulting chips will not have any function-preventing physical defects, and will meet original specifications. Manufacturing preparation[edit] Mask data preparation, MDP: generation of actual lithography photomask used to physically manufacture the chip. Resolution enhancement techniques, RET – methods of increasing of quality of final photomask. Optical proximity correction, OPC – up-front compensation for diffraction and interference effects occurring later when chip is manufactured using this mask. Mask generation – generation of flat mask image from hierarchical design. Automatic test pattern generation, ATPG – generates pattern-data to systematically exercise as many logic-gates, and other components, as possible. Built-in self-test, or BIST – installs self-contained test-controllers to automatically test a logic (or memory) structure in the design Functional Safety[edit] Functional Safety Analysis, Systematic computation of failure in time (FIT) rates and diagnostic coverage metrics for designs in order to meet the compliance requirements for the desired safety integrity levels. Functional Safety Synthesis, Add reliability enhancements to structured elements (Modules, RAMs, ROMs, Register Files, FIFOs) to improves fault detection / fault tolerance. These includes (not limited to), Addition of error detection and / or correction codes (Hamming), Redundant logic for fault detection and fault tolerance (duplicate / triplicate) and Protocol checks (Interface parity, address alignment, beat count) Functional Safety Verification,Running of a fault campaign, including insertion of faults into the design and verification that the safety mechanism reacts in an appropriate manner for the faults that are deemed covered. PCB layout and schematic for connector design Companies[edit] Further information: List of EDA companies Old companies[edit] Market capitalization and company name as of December 2011[update]:[3] $5.77 billion[4] – Synopsys $4.46 billion[5] – Cadence $2.33 billion – Mentor Graphics $507 million – Magma Design Automation; Synopsys acquired Magma in February 2012[6][7] NT$6.44 billion – SpringSoft; Synopsys acquired SpringSoft in August 2012 ¥11.95 billion – Zuken Inc. Note: EEsof should likely be on this list,[8] but it does not have a market cap as it is the EDA division of Keysight. Acquisitions[edit] Main article: List of EDA companies Many of the EDA companies acquire small companies with software or other technology that can be adapted to their core business.[9] Most of the market leaders are amalgamations of many smaller companies.[10] This trend is helped by the tendency of software companies to design tools as accessories that fit naturally into a larger vendor's suite of programs on digital circuitry, many new tools incorporate analog design, and mixed systems. This is happening because there is now a trend to place entire electronic systems on a single chip. See also[edit] Electronics portal Wikimedia Commons has media related to Electronic design automation. Computer-aided design (CAD) Circuit design EDA database Signoff (electronic design automation) Comparison of EDA software Platform-based design References[edit] ^ "About the EDA Industry". Electronic Design Automation Consortium. Archived from the original on August 2, 2015. Retrieved July 29, 2015. ^ Lavagno, Martin, and Scheffer (2006). Electronic Design Automation For Integrated Circuits Handbook. Taylor and Francis. ISBN 0849330963.CS1 maint: Multiple names: authors list (link) ^ Company Comparison - Google Finance. Google.com. Retrieved on 2013-08-10. ^ Synopsys, Inc.: NASDAQ:SNPS quotes & news - Google Finance. Google.com (2013-05-22). Retrieved on 2013-08-10. ^ CDNS Key Statistics | Cadence Design Systems, Inc. Stock - Yahoo! Finance. Finance.yahoo.com. Retrieved on 2013-08-10. ^ Dylan McGrath (30 Nov 2011). "Synopsys to buy Magma for $507 million". EETimes. ^ "Synopsys to Acquire Magma Design Automation". ^ "Agilent EEsof EDA – Part I". ^ Kirti Sikri Desai (2006). "EDA Innovation through Merger and Acquisitions". EDA Cafe. Retrieved March 23, 2010. ^ List of EDA mergers and acquisitions at SemiWiki.com Notes http://www.staticfreesoft.com/documentsTextbook.html Computer Aids for VLSI Design by Steven M. Rubin Electronic Design Automation For Integrated Circuits Handbook, by Lavagno, Martin, and Scheffer, ISBN 0-8493-3096-3, 2006 Combinatorial Algorithms for Integrated Circuit Layout, by Thomas Lengauer, ISBN 3-519-02110-2, Teubner Verlag, 1997. The Electronic Design Automation Handbook, by Dirk Jansen et al., Kluwer Academic Publishers, ISBN 1-4020-7502-2, 2003, available also in German ISBN 3-446-21288-4 (2005) v t e CAD software Free and open-source Mechanical BRL-CAD FreeCAD HeeksCAD LibreCAD Open Cascade Technology OpenSCAD QCad Salome SolveSpace Electrical Electric Fritzing gEDA KiCad kTechLab Magic Oregano QUCS XCircuit Proprietary Mechanical AutoCAD Autodesk Alias Autodesk Inventor Autodesk Revit ArchiCAD BricsCAD CADKEY CATIA Cimatron Cobalt DesignSpark Mechanical Creo Elements/Direct Drafting Creo Elements/Pro FastCAD FINE FORAN GstarCAD IRONCAD KeyCreator ME10 MEDUSA MicroStation nanoCAD NX Onshape PDMS Pro/DESKTOP Pro/ENGINEER Wildfire progeCAD Rhinoceros 3D Grasshopper 3D RUCAPS Solid Edge SolidWorks SpaceClaim T-FLEX CAD TurboCAD VariCAD Vectorworks Electrical Allegro AutoCAD Electrical Autotrax Altium Designer BoardStation CADSTAR CR-2000 CR-3000 CR-5000 CR-8000 Delta Design DesignSpark DipTrace EAGLE Easytrax FreeStyle IntegraStation Micro-Cap Multisim OrCAD Protel Proteus Pulsonix SolidWorks Electrical Tango TARGET TopoR Ultiboard Upverter Xpedition File formats 3MF ACIS AMF C3D CKD DSN DWF DWFX DWG DXF IGES OBJ OpenDWG PLY PSpice SES STEP STL Modeling kernels ACIS C3D Open CASCADE Technology Parasolid RGK Romulus KernelCAD ShapeManager Teigha IntelliCAD v t e Major fields of computer science Note: This template roughly follows the 2012 ACM Computing Classification System. Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip (SoCs) Energy consumption (Green computing) Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Real-time computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domain-specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Open-source model Theory of computation Model of computation Formal language Automata theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Human–computer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi-task learning Cross-validation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing E-commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Portal WikiProject Commons Authority control GND: 4312536-0 Retrieved from "https://en.wikipedia.org/w/index.php?title=Electronic_design_automation&oldid=865100234" Categories: Electronic design automation Electronic engineering Hidden categories: CS1 maint: Multiple names: authors list Use mdy dates from June 2012 Wikipedia articles that are too technical from February 2017 All articles that are too technical Articles needing expert attention from February 2017 All articles needing expert attention Vague or ambiguous geographic scope from April 2014 Articles containing potentially dated statements from December 2011 All articles containing potentially dated statements Commons category link from Wikidata Wikipedia articles with GND identifiers Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Featured content Current events Random article Donate to Wikipedia Wikipedia store Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page Print/export Create a book Download as PDF Printable version In other projects Wikimedia Commons Languages Afrikaans العربية Български Català Deutsch Español Français 한국어 हिन्दी Italiano 日本語 Português Русский Svenska Українська 吴语 中文 Edit links This page was last edited on 21 October 2018, at 18:41 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Cookie statement Mobile view
